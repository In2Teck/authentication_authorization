{"name":"Authentication authorization","tagline":"Reusable code for a generic web app that utilizes devise with facebook login & cancan.","body":"== Basic authorization and authentication rails app\r\n\r\nThis project is intended to provide the base of a web app that can authenticate via Devise using Facebook, while using a role authorization mechanism with cancan.\r\n\r\nThe purpose is to reuse and save time for developing backends. Great for a quick hackaton setup to integrate with Heroku.\r\n\r\n== Versions\r\n\r\nIt was planned over Rails 3.2.11 (the newest & latest supported by Heroku at the time). When developed it worked over:\r\n\r\ndevise 2.2.3\r\nomniauth-facebook 1.4.1\r\ncancan 1.6.9\r\n\r\n== Authentication config with devise\r\n\r\nIntroduce your FACEBOOK app credentials in config/environments/development.rb and modify your preferences in config/initializers/devise.rb\r\n\r\nThe User model contains the next fields:\r\n\r\nfirst_name, string\r\nlast_name, string\r\nuid, string (to store the external id)\r\ncreated_at, datetime\r\nupdated_at, datetime\r\n\r\nThe current Devise config adds the next ones:\r\n\r\nemail, string\r\nencrypted_password, string\r\nreset_password_token, string\r\nreset_password_sent_at, datetime\r\nremember_created_at, datetime\r\nsign_in_count, integer\r\ncurrent_sign_in_at, datetime\r\nlast_sign_in_at, datetime\r\ncurrent_sing_in_ip, string\r\nlast_sign_in_ip, string\r\n\r\nNormally, your user table will need other fields so just add migrations on top of it as needed.\r\n\r\nCustom routes for signin, signup and logout are specified in config/routes.rb\r\n\r\n== Authorization config with cancan\r\n\r\nThe cancan configuration is built on top of a Roles table, which has a 'has_and_belongs_to_many' relationship with the Users table.\r\n\r\nAs an example and to get the app functional right away an 'admin' role and a dummy admin user was created in db/seeds.rb. Please modify this to set your default admin user.\r\n\r\nThe app/models/ability.rb file considers only an admin and a guest user. The admin one has management access to all resources, while the guest user gets read access to all resources. You can define more complex rules as you scale your app in here :)\r\n\r\n== Setup\r\n\r\n1. Clone this repository\r\n\r\n2. Create and configure your facebook app in https://developers.facebook.com/apps . Make sure you check the 'website with facebook login' option and type your local server address with something like 'http://localhost:3000' so you can test.\r\n\r\n3. Edit the config/environments/development.rb file with your Facebook app key and secret.\r\n\r\n4. Configure your database and run the migrations.\r\n\r\n5. Test your Facebook signup by launching your server and entering the /signup path. Eg. http://localhost:3000/signup -> Signin with Facebook\r\n\r\n== Questions\r\n\r\nTo get more custom fucntionality, please check the valuable documentation that is provided in the gems' repositories:\r\n\r\n* devise - https://github.com/plataformatec/devise\r\n* cancan - https://github.com/ryanb/cancan\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}